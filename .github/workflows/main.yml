name: Playwright Tests

on:
  push:
    branches: [ main, master, dev ]
  pull_request:
    branches: [ main, master, dev ]

jobs:
  test:
    timeout-minutes: 20
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm ci
        npm install -g wait-on
        npx playwright install --with-deps

    - name: Build and start production server
      run: |
        # Build the application first
        echo "Building application..."
        npm run build
        
        # Start the production server and save the process ID
        echo "Starting production server..."
        nohup npm start > server.log 2>&1 &
        echo $! > server.pid

        # Wait for the server to be ready
        echo "Waiting for server to be ready..."
        npx wait-on http://localhost:3000 -t 60000 || (cat server.log && exit 1)

        # Basic health check
        echo "Checking server health..."
        curl -f http://localhost:3000 > /dev/null || (echo "Server health check failed" && cat server.log && exit 1)
        echo "Server is ready!"

    - name: Debug environment
      run: |
        echo "Checking server status..."
        ps aux | grep node
        echo "Checking network ports..."
        netstat -tuln || ss -tuln || echo "Network tools not available"
        echo "Checking server log..."
        tail -n 20 server.log

    - name: Run Playwright tests
      run: |
        # Run key tests that are compatible with CI
        npx playwright test tests/example.spec.js tests/chart-component.spec.js tests/app.spec.js --config=playwright.config.js
      env:
        # Increase Node.js memory limit
        NODE_OPTIONS: --max_old_space_size=4096
        # Tell Playwright we're in CI
        CI: true

    - name: Collect server logs
      if: always()
      run: |
        # Collect any server logs for debugging
        cat server.log || echo "No server logs found"

    - name: Stop server
      if: always()
      run: |
        # Stop the server if it's still running
        if [ -f server.pid ]; then
          echo "Stopping server..."
          kill $(cat server.pid) || true
          echo "Server stopped"
        else
          echo "No server PID file found"
        fi

    - name: Upload Playwright report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

    - name: Upload test results on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-results
        path: |
          test-results/
          server.log
        retention-days: 7

    # Slack notification is commented out until webhook is configured
    # - name: Notify Slack on failure
    #   if: failure()
    #   uses: 8398a7/action-slack@v3
    #   with:
    #     status: ${{ job.status }}
    #     fields: repo,message,commit,author,action,eventName,ref,workflow
    #   env:
    #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
